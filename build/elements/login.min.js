import Card from'./card.min.js';import Fab from'./fab.min.js';import Alert from'./alert.min.js';import{Form}from'./form.min.js';import{Input}from'./input.min.js';import{UIBase,defineUIComponent,document,global}from'../utils/ui-component-base.min.js';const INVALID=`Invalid login credentials. Please double-check your username and password.`,FAILURE=`Could not connect to the server to verify your identity. Please check the console for details.`,reflectedAttributes=['is-logged-in','data-url','session-timeout'],template=document.createElement('template');template.innerHTML=`
  <style>
    ui-card {
      width: 300px;
      height: 315px;
    }

    ui-input {
      margin-bottom: 30px;
    }

    ui-fab {
      float: right;
      position: relative;
      left: 15px;
    }

    h2 {
      color: #AAA;
      font-style: italic;
      margin-bottom: 40px;
    }

    #heading {
      width: 70%;
      margin-left: 10%;
      border-bottom: var(--ui-theme-dark-text-color, #999);
    }

    .arrow {
      border: solid #fff;
      border-width: 0 4px 5px 0;
      display: inline-block;
      padding: 3px;
      position: relative;
      transform: rotate(45deg);
      height: 25px;
      width: 12px;
      top: -2px;
      left: 2px;
    }

    :host {
      position: relative;
      left: 50px;
      top: 50px;
    }
  </style>
  <ui-card>
    <h2 id="heading">Login</h2>
    <ui-form>
      <ui-input name="user" label="User" tabindex="1" required></ui-input>
      <ui-input name="pass" label="Password" type="password" tabindex="1" required></ui-input>
      <ui-fab tabindex="1"><div class="arrow"></div></ui-fab>
    </ui-form>
  </ui-card>
`;export default defineUIComponent({name:'ui-login',reflectedAttributes,template,definition:class extends UIBase{constructor(){super(),this._alert=null,this._form=null,this._sessionTimeoutHandle=null}get credentials(){return this.selectInternalElement('ui-form').serialize()}login(a){this.isLoggedIn=!0;const b=new CustomEvent('login',{bubbles:!0});b.credentials=this.credentials,b.response=a,this.dispatchEvent(b),this._sessionTimeoutHandle=this.countDown()}logout(){return this.isLoggedIn=null,this.selectInternalElement('[name="pass"]').value='',global.sessionStorage.setItem('ui-credentials',''),this.dispatchEvent(new CustomEvent('logout',{bubbles:!0})),this}userLogout(){let{name:a}=this.credentials;this.logout(),this._alert.alert(`User ${a} is now logged out. Please close this tab.`),this._alert.selectInternalElement('#closer')}countDown(a){return global.clearTimeout(a),global.setTimeout(()=>{this.logout(),this._alert.alert(`Session timed out. Please login again or close the tab.`),this._alert.selectInternalElement('#closer')},this.sessionTimeout||1800000)}init(){super.init(),this._beforeReady(()=>{this._form=this.selectInternalElement('ui-form'),this._alert=document.querySelector('ui-alert'),this._alert||(this._alert=document.createElement('ui-alert'),document.body.appendChild(this._alert)),['click','keydown'].forEach((a)=>{document.addEventListener(a,()=>{this.isLoggedIn&&(this._sessionTimeoutHandle=this.countDown(this._sessionTimeoutHandle))})});const a=()=>{if(!this.isLoggedIn){if(!this.dataUrl)throw new Error('No url for login, whatcha want me to do?');if(!this._form.isValid)return void this._alert.alert('Please supply a Username and Password.');const{user:a,pass:b}=this.credentials,c={Authorization:`Basic ${btoa(a+':'+b)}`,"Content-Type":'application/x-www-form-urlencoded'};fetch(this.dataUrl,{method:'POST',headers:c}).then((a)=>a.json()).then((a)=>{a?(sessionStorage.setItem('ui-credentials',JSON.stringify(this.credentials)),this.login(a)):this._alert.alert(INVALID)}).catch((a)=>{console.error(a),this._alert.alert(FAILURE)})}};this.selectInternalElement('ui-fab').on('click enter-key',a),this.selectInternalElement('[name="pass"]').on('enter-key',a)}),this.onReady(()=>{const a=document.querySelector('[logout-button]');a&&a.on('click keydown',(a)=>{a.keyCode&&13!==a.keyCode||this.userLogout()}),global.setTimeout(()=>{let a=global.sessionStorage.getItem('ui-credentials');if(a)try{let b=JSON.parse(a);b.user&&b.pass&&(console.log('Logging in with session data...'),this.login(),this._form.data=b)}catch(a){}},500)})}}});