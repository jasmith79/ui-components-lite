import{TooltipMixin}from'./tooltip.min.js';import Ripples from'../animations/rippler.min.js';import Floats from'../utils/float.min.js';import Centerable from'../utils/centerer.min.js';import Focusable from'../utils/focusable.min.js';import{defineUIComponent,document,UIBase}from'../utils/ui-component-base.min.js';import{mix}from'../../../mixwith/src/mixwith.js';const template=document.createElement('template');template.innerHTML=`
  <style>
    :host {
      display: block;
      height: 50px;
      width: 120px;
      text-align: center;
      white-space: nowrap;
      text-overflow: ellipsis;
      text-transform: uppercase;
      border-radius: 5%;
      background-color: var(--ui-theme-secondary-dark-color, blue);
      color: var(--ui-theme-light-text-color, #fff);
      margin: 5px;
    }

    :host(:hover) {
      box-shadow: inset 0 0 0 99999px rgba(150,150,150,0.2);
    }
  </style>
`;const reflectedAttributes=['dialog-dismiss','dialog-confirm','submit'],Button=defineUIComponent({name:'ui-button',template,reflectedAttributes,definition:class extends mix(UIBase).with(Centerable,Floats,Ripples,Focusable,TooltipMixin){init(){super.init(),this.attr('role','button');const a=this.attr('tabindex');(null===a||0>a)&&this.attr('tabindex','0')}}});export default Button;