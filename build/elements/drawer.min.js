import Backdrop from'./backdrop.min.js';import Easer from'../animations/easer.min.js';import Floats from'../utils/float.min.js';import{UIBase,defineUIComponent,document}from'../utils/ui-component-base.min.js';import{mix}from'../../../mixwith/src/mixwith.js';const template=document.createElement('template');template.innerHTML=`
  <style>
    :host {
      display: block;
      position: absolute;
      top: 0;
      height: 100vh;
      z-index: 9001;
      max-width: 90vw;
      width: 320px;
      padding: 10px;
      background-color: #fff;
    }

    :host([left-oriented]) {
      left: -350px;
      border-right: solid 1px var(--ui-theme-dark-text-color, #000);
    }

    :host([right-oriented]) {
      left: 100vw;
      border-left: solid 1px var(--ui-theme-dark-text-color, #000);
    }
  </style>
  <slot></slot>
`;const reflectedAttributes=['is-modal','is-open'];export default defineUIComponent({name:'ui-drawer',template,reflectedAttributes,definition:class extends mix(UIBase).with(Floats,Easer){constructor(){super(),this._backdrop=document.createElement('ui-backdrop'),this._backdrop.for=this,this._backdrop.style.zIndex='9000',this._toggleElem=null,this._isOpen=!1,this._rightAnimator=null,this._leftAnimator=null}toggledBy(a){return a&&(this._toggleElem=a,this._toggleElem.on?this._toggleElem.on('click enter-key',()=>{this.toggleState()}):(this._toggleElem.addEventListener('enter-key',()=>{this.toggleState()}),this._toggleElem.addEventListener('click',()=>{this.toggleState()}))),this}open(){return this.isOpen=!0,this}close(){return this.isOpen=!1,this}toggleState(){return this.isOpen=!this.isOpen,this}init(){super.init(),this.rightOriented||(this.leftOriented=!0),this.floatingX=!0,document.body.appendChild(this._backdrop),this._backdrop.on('click',()=>this.close()),this.toggledBy(document.querySelector('[drawer-toggle]')),this._leftAnimator=this.defineSlideAnimation({direction:'right',distance:'350px'}),this._rightAnimator=this.defineSlideAnimation({direction:'left',distance:'350px'}),this.on('attribute-change',({changed:{now:a,name:b}})=>{const c=this.rightOriented?'right':'left',d=this[`_${c}Animator`];'is-open'===b?a?(this.isModal&&this._backdrop.show(),d.easeIn().then(()=>{this.dispatchEvent(new CustomEvent('drawer-opened'))})):d.easeOut().then(()=>{this._backdrop.hide(),this.dispatchEvent(new CustomEvent('drawer-closed'))}):void 0})}}});