import Button from'./button.min.js';import Dialog from'./dialog.min.js';import{document,defineUIComponent}from'../utils/dom.min.js';const reflectedAttributes=['confirmable'],template=document.createElement('template');template.innerHTML=`
  <style>
    :host {
      top: 30%;
    }

    #content {
      width: 90%;
      margin-left: auto;
      margin-right: auto;
      height: 65%;
    }

    #bttn-holder ui-button {
      position: relative;
      top: 12px;
      width: 105px;
      height: 50px;
      display: inline-block;
      float: right;
      color: var(--ui-theme-light-text-color, #fff);
    }

    #closer {
      background-color: var(--ui-theme-warning-color, #e83673);
    }

    [dialog-confirm] {
      background-color: var(--ui-theme-primary-color);
    }
  </style>
  <div id="content"></div>
  <div id="bttn-holder">
    <ui-button id="closer" dialog-dismiss>Close</ui-button>
  </div>
`;const Alert=defineUIComponent({name:'ui-alert',template,reflectedAttributes,definition:class extends Dialog{constructor(){super(),this._confirmer=document.createElement('ui-button'),this._confirmer.id='confirmer',this._confirmer.textContent='Confirm',this._confirmer.attr('dialog-confirm',!0),this.on('attribute-change',({changed:{now:a,name:b,was:c}})=>{switch(b){case'is-open':return a?this._backdrop.show():this._backdrop.hide();case'confirmable':a&&!this.selectInternalElement('[dialog-confirm]')&&this.selectInternalElement('#bttn-holder').appendChild(this._confirmer),!a&&this.selectInternalElement('[dialog-confirm]')&&this.selectInternalElemen('#bttn-holder').this.removeChild(this._confirmer);}})}init(){super.init(),this.attr('role','alert'),this.scrollableDialog=!1,this.smallDialog=!0,this.attr('is-modal',!0);const a=this.selectInternalElement('#closer');this.on('dialog-opened',()=>{a.focus()})}get textContent(){return this.selectInternalElement('#content').textContent}set textContent(a){return this.selectInternalElement('#content').textContent=a,this}get innerHTML(){return this.selectInternalElement('#content').innerHTML}set innerHTML(a){this.selectInternalElement('#content').innerHTML=a}alert(a){return this.innerHTML=a,this.open()}}});export default Alert;