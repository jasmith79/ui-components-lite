import Floats from'../utils/float.min.js';import{UIBase,defineUIComponent,document,global}from'../utils/ui-component-base.min.js';import{mix}from'../../../mixwith/src/mixwith.js';const reflectedAttributes=['for','position'],template=document.createElement('template');template.innerHTML=`
  <style>
    :host {
      display: block;
      position: absolute;
      z-index: 2000;
      background-color: #555;
      color: #fff;
      opacity: 0;
      transition: opacity;
      transition-duration: 300ms; 
      max-width: 200px;
      max-height: 100px;
    }

    #tooltip {
      font-size: 10px;
      background-color: inherit;
      color: inherit;
      padding: 5px;
      border-radius: 2%;
      width: inherit;
      height: inherit;
    }

    :host(.faded-in) {
      opacity: 0.9;
    }
  </style>
  <div id="tooltip">
    <slot></slot>
  </div>
`;export default defineUIComponent({name:'ui-tooltip',template,reflectedAttributes,definition:class extends mix(UIBase).with(Floats){constructor(){super(),this._forHandlers=[],this._forElement=null}init(){super.init(),this.floatingY=!0}_updatePosition(){let{top:a,left:b,height:c,width:d}=this._forElement.getBoundingClientRect();a+=global.scrollY||global.pageYOffset,b+=global.scrollX||global.pageXOffset;let{width:e,height:f}=this.getBoundingClientRect();switch(this.position){case'above':this.style.top=`${a-f-5}px`,this.style.left=`${b}px`;break;case'below':this.style.top=`${a+c+5}px`,this.style.left=`${b}px`;break;case'left':this.style.top=`${a}px`,this.style.left=`${b-e-5}px`;break;default:this.style.top=`${a}px`,this.style.left=`${b+d+5}px`;}return this}connectedCallback(){super.connectedCallback(),this._forHandlers.length||this._forHandlers.push(()=>{this.classList.remove('faded-in')},()=>{this._updatePosition(),this.classList.add('faded-in')});let a=((a)=>{for(;a=a.parentNode;){if(a.host)return a.host;if(a===document)return a}})(this);if(this.for&&(this._forElement=a.querySelector(`#${this.for}`)),this._forElement||(this._forElement=this.parentNode.host||this.parentNode),!this._forElement)throw new Error('ui-tooltip must have a "for" attribute/property or a parent');const[b,c]=this._forHandlers;this._forElement.addEventListener('mouseenter',c),this._forElement.addEventListener('mouseleave',b)}disconnectedCallback(){super.disconnectedCallback();const[a,b]=this._forHandlers;this._forElement.removeEventListener('mouseenter',b),this._forElement.removeEventListener('mouseleave',a)}}});