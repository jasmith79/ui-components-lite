import{inputNormalizer}from'../utils/normalizer.min.js';import{toQueryString,parseURL}from'../utils/url.min.js';import{UIBase,defineUIComponent,document,global}from'../utils/ui-component-base.min.js';import extractType from'../../../extracttype/extracttype.js';import{mix}from'../../../mixwith/src/mixwith.js';export const Form=(()=>{const a=document.createElement('template');return a.innerHTML=`
    <style>
      :host {
        display: block;
      }
    </style>
    <slot></slot>
  `,defineUIComponent({name:'ui-form',template:a,reflectedAttributes:['action','method','autocomplete','response-type','updates-history'],definition:class extends UIBase{constructor(){super(),this._form=null,this._formUIComponents=null}_formControlType(a){return a&&a.matches&&(()=>a.matches('input[name]')||a.matches(`input[form="${this.id}"]`)?'input':a.matches('select[name]')||a.matches(`select[form="${this.id}"]`)?'select':(a.matches('.ui-form-behavior')||a.matches(`.ui-form-behavior[form="${this.id}"]`))&&'formElement')()}get elements(){return this.id?[...new Set([...this.selectAll('input[name], select[name], .ui-form-behavior[name]'),...document.querySelectorAll(`[form="${this.id}"]`)])]:this.selectAll('input[name], select[name], .ui-form-behavior')}get isValid(){return!this.querySelector(':invalid')&&!this.querySelector('.invalid')}get data(){return this.elements.reduce((a,b)=>{let c=b.getAttribute('name');return c&&a.append(c,null==b.value?'':b.value),a},new FormData)}set data(a){return Object.entries(a).forEach(([a,b])=>{const c=this.elements.filter((b)=>b.matches(`[name="${a}"]`));c.forEach((a,c)=>{const d=this._formControlType(a);let e=Array.isArray(b)?b[c]||b[b.length-1]:b;('undefined'===e||'null'===e)&&(e=''),'formElement'===d?a.value!==e&&(a.value=e):'select'===d?[...sel.options].forEach((a,b)=>{a.value===e&&b!==sel.selectedIndex&&(sel.selectedIndex=b)}):void 0})}),this.data}serialize(){return this.elements.reduce((a,b)=>{let c,d=b.getAttribute('name');try{c=JSON.parse(b.value)}catch(a){c=b.value}return d in a?(!Array.isArray(a[d])&&(a[d]=[a[d]]),a[d].push(c)):a[d]=c,a},{})}submit({url:a,method:b,headers:c,responseType:d}={}){if(this.isValid){const e=a||this.action,f=b||this.method||'POST',g={method:f,body:this.data};c&&(g.headers=c);const h=fetch(e,g),i=new Event('submit');switch(i.pendingResult=h,this.dispatchEvent(i),(d||this.responseType||'text').toLowerCase()){case'text':case'html':return h.then((a)=>a.text());case'json':return h.then((a)=>a.json());default:return h;}}else return Promise.reject(new Error('Attempted to submit invalid form.'))}init(){super.init(),this.attr('is-data-element',!0),this.attr('role','form');const a=()=>{const a=this.serialize(),b=parseURL(global.location.href),{path:c,route:d,hashBang:e}=b;let f=c;e&&(f+='#!'),d&&(f+=d),f+=toQueryString(a),global.history.replaceState(a,'',f)};this._beforeReady(()=>{this.elements.forEach((b)=>{'INPUT'===b.tagName&&inputNormalizer(b),this.updatesHistory&&b[b.on?'on':'addEventListener']('change',a),b[b.on?'on':'addEventListener']('change',()=>{this.id&&global.localStorage.setItem(this.id,JSON.stringify(this.serialize()))})})})}}})})();export const FormControlBehavior=(()=>{const a=['name','value','required','is-valid','placeholder'];return(b)=>defineUIComponent({name:'ui-form-behavior',registerElement:!1,reflectedAttributes:a,definition:class extends b{constructor(){super(),this._validators=[]}_validate(){let a=!this._validators.length||this._validators.every((a)=>a(this.value));return this.isValid=a,this.classList.remove(a?'invalid':'valid'),this.classList.add(a?'valid':'invalid'),a}validate(a){return this._validators.includes(a)||(this._validators.push(a),this._validate()),this}removeValidator(a){return this._validators=this._validators.filter((b)=>b!==a),this._validate(),this}init(){super.init();let a=this.value;this.on('attribute-change',({changed:{now:b,name:c}})=>{switch(c){case'value':case'selected-index':if(b!==a){a=b,this._validate();const c=new Event('change');c.value=this.value,c.isValid=this.isValid,this.dispatchEvent(c)}break;case'required':const d=(a)=>null!=a&&''!==a;b?this.validate(d):this.removeValidator(d);}})}}})})();