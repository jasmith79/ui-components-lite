var _this=this;import{toCamelCase,toSnakeCase}from'../../../jsstring/src/jsstring.js';const global=new Function('return this')(),document=global.document,baseClass=global.HTMLElement,registry={},toPropertyObj=(a)=>a.reduce((a,b)=>{const c=toCamelCase(b);return a[c]={get:function(){return void 0===this[`_${c}`]?null:this[`_${c}`]},set:function(a){return this[`_${c}`]!==a&&(this[`_${c}`]=a,this.attr(toSnakeCase(c,'-'),a)),a}},a},{}),defineUIComponent=({name:a,definition:b,reflectedAttributes:e=[],template:c,registerElement:f=!0,isShadowHost:d})=>{if(!a)throw new Error('ui-components must have a name.');if(!b)throw new Error('ui-components must have a defining class');if(a in registry)throw new Error(`ui-component named ${a} already registered.`);let g=null;(b._template||c)&&(g=document.createElement('template')),b._template&&(g.innerHTML+=b._template.innerHTML),c&&(g.innerHTML+=c.innerHTML);const h=class extends b{static get observedAttributes(){return[...super.observedAttributes,...e]}static get _template(){return g}_stamp(){let b=g?g.cloneNode(!0):null;return b&&global._usingShady&&global.ShadyCSS.prepareTemplate(b,a),b}init(){super.init(),this.classList.add(a),this._beforeReady(()=>{global._usingShady&&this.shadowRoot&&this.selectInternalElement('style')&&ShadyCSS.styleElement(this)})}};return Object.defineProperty(h,'name',{get:()=>_this.name}),Object.defineProperties(h.prototype,toPropertyObj(e)),f&&(global.customElements.define(a,h),registry[a]=h),h};export{document,baseClass,defineUIComponent,global};