import{defineUIComponent,document}from'./dom.min.js';const template=document.createElement('template');template.innerHTML=`
  <style>
    :host(.left-x) {
      box-shadow: 3px 0px 10px -3px #000;
      margin-right: 3px;
    }

    :host(.right-x) {
      box-shadow: -3px 0px 10px -3px #000;
      margin-left: 3px;
    }

    :host(.float-y) {
      box-shadow: 0px 3px 10px -3px #000;
      margin-bottom: 3px;
    }
  </style>
`;const reflectedAttributes=['floating-x','floating-y','right-oriented','left-oriented'];export default((a)=>defineUIComponent({name:'ui-floating',reflectedAttributes,template,registerElement:!1,definition:class extends a{get isFloating(){return this.floatingX||this.floatingY}init(){super.init(),this.on('attribute-change',({changed:{now:a,name:b}})=>{switch(b){case'floating-y':return a?this.classList.add('float-y'):this.classList.remove('float-y');case'floating-x':const c=this.attr('right-oriented')?'right-x':'left-x';return a?this.classList.add(c):this.classList.remove(c);case'right-oriented':return void(this.classList.contains('left-x')&&(this.classList.remove('left-x'),this.classList.add('right-x')));case'left-oriented':return void(this.classList.contains('right-x')&&(this.classList.remove('right-x'),this.classList.add('left-x')));}})}}}));